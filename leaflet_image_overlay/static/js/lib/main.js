// Generated by CoffeeScript 1.8.0
(function() {
  var config;

  config = {};

  config.MAP_CENTER = [38.907, -77.0368];

  config.MAP_ZOOM = 11;

  config.LENFANT_URL = '/static/images/lenfant_map.jpg';

  config.LENFANT_BOUNDS = [config.MAP_CENTER, [config.MAP_CENTER[0] + 0.002, config.MAP_CENTER[1] + 0.001]];

  $(document).ready(function() {
    var bounds, currentOpacity, im, map, moveCornerMarkers, ne, nw, overlay, overlayBounds, se, sidebar, sidebarOpenControl, slider, sw, updateOverlay;
    map = L.mapbox.map('map', 'examples.map-i86nkdio', {
      zoomControl: false
    });
    map.setView(config.MAP_CENTER, config.MAP_ZOOM);
    map.on('mousedown', function(e) {
      return map.dragging.enable();
    });
    map.on('zoomend', function(e) {
      return moveCornerMarkers;
    });
    map.on('popupopen', function(e) {
      return console.log(e);
    });
    currentOpacity = 0.5;
    overlayBounds = config.LENFANT_BOUNDS;
    console.log(overlayBounds);
    overlay = L.imageOverlay(config.LENFANT_URL, overlayBounds, {
      opacity: 0.35
    }).addTo(map);
    bounds = L.latLngBounds(overlayBounds);
    ne = L.marker(bounds.getNorthEast(), {
      draggable: true
    }).bindPopup('Foo').addTo(map);
    nw = L.marker(bounds.getNorthWest(), {
      draggable: true
    }).addTo(map);
    se = L.marker(bounds.getSouthEast(), {
      draggable: true
    }).addTo(map);
    sw = L.marker(bounds.getSouthWest(), {
      draggable: true
    }).addTo(map);
    $('#northeast_input_lat').val(ne.getLatLng().lat);
    $('#northeast_input_lon').val(ne.getLatLng().lng);
    $('#southwest_input_lat').val(sw.getLatLng().lat);
    $('#southwest_input_lon').val(sw.getLatLng().lng);
    sidebar = L.control.sidebar('sidebar', {
      position: 'left',
      autoPan: false
    });
    map.addControl(sidebar);
    slider = $('#slider').slider({
      min: 0,
      max: 1.0,
      step: 0.01,
      value: 0.5
    });
    slider.on('slide', function(e) {
      currentOpacity = e.value;
      return updateOverlay(overlayBounds);
    });
    sidebar.hide();
    $('.leaflet-sidebar').css('width', 300);
    L.Control.SidebarOpen = L.Control.extend({
      options: {
        position: 'topleft'
      },
      onAdd: function(map) {
        var controlDiv, controlUI;
        controlDiv = L.DomUtil.create('div', 'leaflet-control-sidebar-open');
        L.DomEvent.addListener(controlDiv, 'click', L.DomEvent.stopPropagation).addListener(controlDiv, 'click', L.DomEvent.preventDefault).addListener(controlDiv, 'click', function() {
          return sidebar.toggle();
        });
        controlUI = L.DomUtil.create('div', 'leaflet-control-sidebar-open-interior', controlDiv);
        controlUI.title = 'Map Commands';
        return controlDiv;
      }
    });
    sidebarOpenControl = new L.Control.SidebarOpen();
    sidebar.on('show', function() {
      return sidebarOpenControl.removeFrom(map);
    });
    sidebar.on('hidden', function() {
      sidebarOpenControl.addTo(map);
      return $('.leaflet-control-sidebar-open-interior').append('<button type="submit" class="btn btn-default"><span class="glyphicon glyphicon-cog"></span> </button>');
    });
    map.addControl(sidebarOpenControl);
    $('.leaflet-control-sidebar-open-interior').append('<button type="submit" class="btn btn-default"><span class="glyphicon glyphicon-cog"></span> </button>');
    $('#image_url_input').bind('keypress', function(e) {
      if (e.keyCode === 13 || e.which === 13) {
        config.LENFANT_URL = $('#image_url_input').val();
        return updateOverlay(overlayBounds);
      }
    });
    $('.latlon-input').bind('keypress', function(e) {
      var neLatLng, swLatLng;
      if (e.keyCode === 13 || e.which === 13) {
        neLatLng = [parseFloat($('#northeast_input_lat').val()), parseFloat($('#northeast_input_lng').val())];
        swLatLng = [parseFloat($('#southwest_input_lat').val()), parseFloat($('#southwest_input_lng').val())];
        return updateOverlay([swLatLng, neLatLng]);
      }
    });
    moveCornerMarkers = function(bounds) {
      overlayBounds = bounds;
      bounds = L.latLngBounds(bounds);
      ne.setLatLng(bounds.getNorthEast());
      nw.setLatLng(bounds.getNorthWest());
      se.setLatLng(bounds.getSouthEast());
      sw.setLatLng(bounds.getSouthWest());
      $('#northeast_input_lat').val(ne.getLatLng().lat);
      $('#northeast_input_lng').val(ne.getLatLng().lng);
      $('#southwest_input_lat').val(sw.getLatLng().lat);
      return $('#southwest_input_lng').val(sw.getLatLng().lng);
    };
    updateOverlay = function(bounds) {
      console.log(bounds);
      overlayBounds = bounds;
      map.removeLayer(overlay);
      overlay = L.imageOverlay(config.LENFANT_URL, bounds, {
        opacity: currentOpacity
      }).addTo(map);
      return moveCornerMarkers(bounds);
    };
    ne.on('drag', function(e) {
      overlayBounds[1] = [e.target._latlng.lat, e.target._latlng.lng];
      return updateOverlay(overlayBounds);
    });
    nw.on('drag', function(e) {
      overlayBounds[1][0] = e.target._latlng.lat;
      overlayBounds[0][1] = e.target._latlng.lng;
      return updateOverlay(overlayBounds);
    });
    se.on('drag', function(e) {
      overlayBounds[0][0] = e.target._latlng.lat;
      overlayBounds[1][1] = e.target._latlng.lng;
      return updateOverlay(overlayBounds);
    });
    sw.on('drag', function(e) {
      overlayBounds[0] = [e.target._latlng.lat, e.target._latlng.lng];
      return updateOverlay(overlayBounds);
    });
    moveCornerMarkers(overlayBounds);
    im = new Image();
    im.onload = function() {
      var lastLatLng, md;
      md = false;
      lastLatLng = config.MAP_CENTER;
      overlayBounds = [config.MAP_CENTER, [config.MAP_CENTER[0] + 0.1 * im.height / im.width, config.MAP_CENTER[1] + 0.1]];
      updateOverlay(overlayBounds);
      $('.leaflet-overlay-pane').mousedown(function(e) {
        md = true;
        map.dragging.disable();
        return lastLatLng = map.mouseEventToLatLng(e);
      });
      $('#map').mousemove(function(e) {
        var currentLatLng, dLat, dLng;
        if (md) {
          map.dragging.disable();
          currentLatLng = map.mouseEventToLatLng(e);
          dLat = currentLatLng.lat - lastLatLng.lat;
          dLng = currentLatLng.lng - lastLatLng.lng;
          overlayBounds[0][0] += dLat;
          overlayBounds[1][0] += dLat;
          overlayBounds[0][1] += dLng;
          overlayBounds[1][1] += dLng;
          updateOverlay(overlayBounds);
          lastLatLng = currentLatLng;
          return map.dragging.enable();
        }
      });
      return $('.leaflet-overlay-pane').mouseup(function() {
        md = false;
        return map.dragging.enable();
      });
    };
    return im.src = config.LENFANT_URL;
  });

}).call(this);
